@rendermode InteractiveServer

@if (IsSidebarVisible)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 z-40" @onclick="@HideSidebar"></div>
}
<aside class="@sidebarClass">
    <div class="flex flex-col gap-2 p-4">
        <SidebarNavLink Title="Home" Icon="fa-solid fa-home" Href="/" />
        <SidebarNavLink Title="Shop" Icon="fa-solid fa-shirt" Href="/shop" />
        <SidebarNavLink Title="Blog" Icon="fa-solid fa-blog" Href="/blog" />
        <SidebarNavLink Title="About" Icon="fa-solid fa-user" Href="/about" />
        <SidebarNavLink Title="Portfolio" Icon="fa-solid fa-briefcase" Href="/portfolio" />
        <SidebarNavLink Title="Contact" Icon="fa-solid fa-envelope" Href="/contact" />
    </div>
</aside>

@code {
    [Parameter]
    public bool IsSidebarVisible { get; set; }
    [Parameter]
    public EventCallback<bool> IsSidebarVisibleChanged { get; set; }
    private async Task HideSidebar()
    {
        IsSidebarVisible = false;
        await IsSidebarVisibleChanged.InvokeAsync(IsSidebarVisible);
    }

    private string sidebarClass => $"fixed top-0 left-0 bottom-0 overflow-hidden transition-all duration-300 bg-darkblue rounded-tr-md ease-in-out rounded-br-md z-50 {(IsSidebarVisible ? "w-40" : "w-0")}";
}
